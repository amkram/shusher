// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parsimony.proto

#include "parsimony.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_parsimony_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_parsimony_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_condensed_node;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_parsimony_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_mut;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_parsimony_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_node_metadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_parsimony_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_mutation_list;
}  // namespace protobuf_parsimony_2eproto
namespace Parsimony {
class mutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mut>
      _instance;
} _mut_default_instance_;
class mutation_listDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<mutation_list>
      _instance;
} _mutation_list_default_instance_;
class condensed_nodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<condensed_node>
      _instance;
} _condensed_node_default_instance_;
class node_metadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<node_metadata>
      _instance;
} _node_metadata_default_instance_;
class dataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<data>
      _instance;
} _data_default_instance_;
}  // namespace Parsimony
namespace protobuf_parsimony_2eproto {
static void InitDefaultsmut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Parsimony::_mut_default_instance_;
    new (ptr) ::Parsimony::mut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Parsimony::mut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_mut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmut}, {}};

static void InitDefaultsmutation_list() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Parsimony::_mutation_list_default_instance_;
    new (ptr) ::Parsimony::mutation_list();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Parsimony::mutation_list::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_mutation_list =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsmutation_list}, {
      &protobuf_parsimony_2eproto::scc_info_mut.base,}};

static void InitDefaultscondensed_node() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Parsimony::_condensed_node_default_instance_;
    new (ptr) ::Parsimony::condensed_node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Parsimony::condensed_node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_condensed_node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultscondensed_node}, {}};

static void InitDefaultsnode_metadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Parsimony::_node_metadata_default_instance_;
    new (ptr) ::Parsimony::node_metadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Parsimony::node_metadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_node_metadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsnode_metadata}, {}};

static void InitDefaultsdata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Parsimony::_data_default_instance_;
    new (ptr) ::Parsimony::data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Parsimony::data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsdata}, {
      &protobuf_parsimony_2eproto::scc_info_mutation_list.base,
      &protobuf_parsimony_2eproto::scc_info_condensed_node.base,
      &protobuf_parsimony_2eproto::scc_info_node_metadata.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_mut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_mutation_list.base);
  ::google::protobuf::internal::InitSCC(&scc_info_condensed_node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_node_metadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_data.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mut, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mut, ref_nuc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mut, par_nuc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mut, mut_nuc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mut, chromosome_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mutation_list, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::mutation_list, mutation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::condensed_node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::condensed_node, node_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::condensed_node, condensed_leaves_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::node_metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::node_metadata, clade_annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::data, newick_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::data, node_mutations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::data, condensed_nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Parsimony::data, metadata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Parsimony::mut)},
  { 10, -1, sizeof(::Parsimony::mutation_list)},
  { 16, -1, sizeof(::Parsimony::condensed_node)},
  { 23, -1, sizeof(::Parsimony::node_metadata)},
  { 29, -1, sizeof(::Parsimony::data)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Parsimony::_mut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Parsimony::_mutation_list_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Parsimony::_condensed_node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Parsimony::_node_metadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Parsimony::_data_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "parsimony.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017parsimony.proto\022\tParsimony\"^\n\003mut\022\020\n\010p"
      "osition\030\001 \001(\005\022\017\n\007ref_nuc\030\002 \001(\005\022\017\n\007par_nu"
      "c\030\003 \001(\005\022\017\n\007mut_nuc\030\004 \003(\005\022\022\n\nchromosome\030\005"
      " \001(\t\"1\n\rmutation_list\022 \n\010mutation\030\001 \003(\0132"
      "\016.Parsimony.mut\"=\n\016condensed_node\022\021\n\tnod"
      "e_name\030\001 \001(\t\022\030\n\020condensed_leaves\030\002 \003(\t\"*"
      "\n\rnode_metadata\022\031\n\021clade_annotations\030\001 \003"
      "(\t\"\250\001\n\004data\022\016\n\006newick\030\001 \001(\t\0220\n\016node_muta"
      "tions\030\002 \003(\0132\030.Parsimony.mutation_list\0222\n"
      "\017condensed_nodes\030\003 \003(\0132\031.Parsimony.conde"
      "nsed_node\022*\n\010metadata\030\004 \003(\0132\030.Parsimony."
      "node_metadatab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 461);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "parsimony.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_parsimony_2eproto
namespace Parsimony {

// ===================================================================

void mut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mut::kPositionFieldNumber;
const int mut::kRefNucFieldNumber;
const int mut::kParNucFieldNumber;
const int mut::kMutNucFieldNumber;
const int mut::kChromosomeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mut::mut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_parsimony_2eproto::scc_info_mut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parsimony.mut)
}
mut::mut(const mut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mut_nuc_(from.mut_nuc_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chromosome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chromosome().size() > 0) {
    chromosome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chromosome_);
  }
  ::memcpy(&position_, &from.position_,
    static_cast<size_t>(reinterpret_cast<char*>(&par_nuc_) -
    reinterpret_cast<char*>(&position_)) + sizeof(par_nuc_));
  // @@protoc_insertion_point(copy_constructor:Parsimony.mut)
}

void mut::SharedCtor() {
  chromosome_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&par_nuc_) -
      reinterpret_cast<char*>(&position_)) + sizeof(par_nuc_));
}

mut::~mut() {
  // @@protoc_insertion_point(destructor:Parsimony.mut)
  SharedDtor();
}

void mut::SharedDtor() {
  chromosome_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void mut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mut::descriptor() {
  ::protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mut& mut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_parsimony_2eproto::scc_info_mut.base);
  return *internal_default_instance();
}


void mut::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.mut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mut_nuc_.Clear();
  chromosome_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&par_nuc_) -
      reinterpret_cast<char*>(&position_)) + sizeof(par_nuc_));
  _internal_metadata_.Clear();
}

bool mut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parsimony.mut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ref_nuc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ref_nuc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 par_nuc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &par_nuc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 mut_nuc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mut_nuc())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_mut_nuc())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chromosome = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chromosome()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chromosome().data(), static_cast<int>(this->chromosome().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parsimony.mut.chromosome"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parsimony.mut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parsimony.mut)
  return false;
#undef DO_
}

void mut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parsimony.mut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 position = 1;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->position(), output);
  }

  // int32 ref_nuc = 2;
  if (this->ref_nuc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ref_nuc(), output);
  }

  // int32 par_nuc = 3;
  if (this->par_nuc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->par_nuc(), output);
  }

  // repeated int32 mut_nuc = 4;
  if (this->mut_nuc_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mut_nuc_cached_byte_size_));
  }
  for (int i = 0, n = this->mut_nuc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->mut_nuc(i), output);
  }

  // string chromosome = 5;
  if (this->chromosome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chromosome().data(), static_cast<int>(this->chromosome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.mut.chromosome");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->chromosome(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Parsimony.mut)
}

::google::protobuf::uint8* mut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Parsimony.mut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 position = 1;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->position(), target);
  }

  // int32 ref_nuc = 2;
  if (this->ref_nuc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ref_nuc(), target);
  }

  // int32 par_nuc = 3;
  if (this->par_nuc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->par_nuc(), target);
  }

  // repeated int32 mut_nuc = 4;
  if (this->mut_nuc_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mut_nuc_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->mut_nuc_, target);
  }

  // string chromosome = 5;
  if (this->chromosome().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chromosome().data(), static_cast<int>(this->chromosome().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.mut.chromosome");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->chromosome(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parsimony.mut)
  return target;
}

size_t mut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Parsimony.mut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 mut_nuc = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->mut_nuc_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mut_nuc_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string chromosome = 5;
  if (this->chromosome().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chromosome());
  }

  // int32 position = 1;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  // int32 ref_nuc = 2;
  if (this->ref_nuc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ref_nuc());
  }

  // int32 par_nuc = 3;
  if (this->par_nuc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->par_nuc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Parsimony.mut)
  GOOGLE_DCHECK_NE(&from, this);
  const mut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Parsimony.mut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Parsimony.mut)
    MergeFrom(*source);
  }
}

void mut::MergeFrom(const mut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.mut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mut_nuc_.MergeFrom(from.mut_nuc_);
  if (from.chromosome().size() > 0) {

    chromosome_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chromosome_);
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.ref_nuc() != 0) {
    set_ref_nuc(from.ref_nuc());
  }
  if (from.par_nuc() != 0) {
    set_par_nuc(from.par_nuc());
  }
}

void mut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Parsimony.mut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mut::CopyFrom(const mut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.mut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mut::IsInitialized() const {
  return true;
}

void mut::Swap(mut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mut::InternalSwap(mut* other) {
  using std::swap;
  mut_nuc_.InternalSwap(&other->mut_nuc_);
  chromosome_.Swap(&other->chromosome_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(ref_nuc_, other->ref_nuc_);
  swap(par_nuc_, other->par_nuc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mut::GetMetadata() const {
  protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void mutation_list::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int mutation_list::kMutationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

mutation_list::mutation_list()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_parsimony_2eproto::scc_info_mutation_list.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parsimony.mutation_list)
}
mutation_list::mutation_list(const mutation_list& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutation_(from.mutation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Parsimony.mutation_list)
}

void mutation_list::SharedCtor() {
}

mutation_list::~mutation_list() {
  // @@protoc_insertion_point(destructor:Parsimony.mutation_list)
  SharedDtor();
}

void mutation_list::SharedDtor() {
}

void mutation_list::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* mutation_list::descriptor() {
  ::protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const mutation_list& mutation_list::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_parsimony_2eproto::scc_info_mutation_list.base);
  return *internal_default_instance();
}


void mutation_list::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.mutation_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutation_.Clear();
  _internal_metadata_.Clear();
}

bool mutation_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parsimony.mutation_list)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Parsimony.mut mutation = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mutation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parsimony.mutation_list)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parsimony.mutation_list)
  return false;
#undef DO_
}

void mutation_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parsimony.mutation_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Parsimony.mut mutation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mutation(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Parsimony.mutation_list)
}

::google::protobuf::uint8* mutation_list::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Parsimony.mutation_list)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Parsimony.mut mutation = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mutation(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parsimony.mutation_list)
  return target;
}

size_t mutation_list::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Parsimony.mutation_list)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Parsimony.mut mutation = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mutation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutation(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void mutation_list::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Parsimony.mutation_list)
  GOOGLE_DCHECK_NE(&from, this);
  const mutation_list* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const mutation_list>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Parsimony.mutation_list)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Parsimony.mutation_list)
    MergeFrom(*source);
  }
}

void mutation_list::MergeFrom(const mutation_list& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.mutation_list)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutation_.MergeFrom(from.mutation_);
}

void mutation_list::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Parsimony.mutation_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void mutation_list::CopyFrom(const mutation_list& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.mutation_list)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool mutation_list::IsInitialized() const {
  return true;
}

void mutation_list::Swap(mutation_list* other) {
  if (other == this) return;
  InternalSwap(other);
}
void mutation_list::InternalSwap(mutation_list* other) {
  using std::swap;
  CastToBase(&mutation_)->InternalSwap(CastToBase(&other->mutation_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata mutation_list::GetMetadata() const {
  protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void condensed_node::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int condensed_node::kNodeNameFieldNumber;
const int condensed_node::kCondensedLeavesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

condensed_node::condensed_node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_parsimony_2eproto::scc_info_condensed_node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parsimony.condensed_node)
}
condensed_node::condensed_node(const condensed_node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      condensed_leaves_(from.condensed_leaves_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.node_name().size() > 0) {
    node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
  }
  // @@protoc_insertion_point(copy_constructor:Parsimony.condensed_node)
}

void condensed_node::SharedCtor() {
  node_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

condensed_node::~condensed_node() {
  // @@protoc_insertion_point(destructor:Parsimony.condensed_node)
  SharedDtor();
}

void condensed_node::SharedDtor() {
  node_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void condensed_node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* condensed_node::descriptor() {
  ::protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const condensed_node& condensed_node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_parsimony_2eproto::scc_info_condensed_node.base);
  return *internal_default_instance();
}


void condensed_node::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.condensed_node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  condensed_leaves_.Clear();
  node_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool condensed_node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parsimony.condensed_node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string node_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_node_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_name().data(), static_cast<int>(this->node_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parsimony.condensed_node.node_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string condensed_leaves = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_condensed_leaves()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->condensed_leaves(this->condensed_leaves_size() - 1).data(),
            static_cast<int>(this->condensed_leaves(this->condensed_leaves_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parsimony.condensed_node.condensed_leaves"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parsimony.condensed_node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parsimony.condensed_node)
  return false;
#undef DO_
}

void condensed_node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parsimony.condensed_node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string node_name = 1;
  if (this->node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_name().data(), static_cast<int>(this->node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.condensed_node.node_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->node_name(), output);
  }

  // repeated string condensed_leaves = 2;
  for (int i = 0, n = this->condensed_leaves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->condensed_leaves(i).data(), static_cast<int>(this->condensed_leaves(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.condensed_node.condensed_leaves");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->condensed_leaves(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Parsimony.condensed_node)
}

::google::protobuf::uint8* condensed_node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Parsimony.condensed_node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string node_name = 1;
  if (this->node_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_name().data(), static_cast<int>(this->node_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.condensed_node.node_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->node_name(), target);
  }

  // repeated string condensed_leaves = 2;
  for (int i = 0, n = this->condensed_leaves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->condensed_leaves(i).data(), static_cast<int>(this->condensed_leaves(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.condensed_node.condensed_leaves");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->condensed_leaves(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parsimony.condensed_node)
  return target;
}

size_t condensed_node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Parsimony.condensed_node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string condensed_leaves = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->condensed_leaves_size());
  for (int i = 0, n = this->condensed_leaves_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->condensed_leaves(i));
  }

  // string node_name = 1;
  if (this->node_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->node_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void condensed_node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Parsimony.condensed_node)
  GOOGLE_DCHECK_NE(&from, this);
  const condensed_node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const condensed_node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Parsimony.condensed_node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Parsimony.condensed_node)
    MergeFrom(*source);
  }
}

void condensed_node::MergeFrom(const condensed_node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.condensed_node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  condensed_leaves_.MergeFrom(from.condensed_leaves_);
  if (from.node_name().size() > 0) {

    node_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.node_name_);
  }
}

void condensed_node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Parsimony.condensed_node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void condensed_node::CopyFrom(const condensed_node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.condensed_node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool condensed_node::IsInitialized() const {
  return true;
}

void condensed_node::Swap(condensed_node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void condensed_node::InternalSwap(condensed_node* other) {
  using std::swap;
  condensed_leaves_.InternalSwap(CastToBase(&other->condensed_leaves_));
  node_name_.Swap(&other->node_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata condensed_node::GetMetadata() const {
  protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void node_metadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int node_metadata::kCladeAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

node_metadata::node_metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_parsimony_2eproto::scc_info_node_metadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parsimony.node_metadata)
}
node_metadata::node_metadata(const node_metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clade_annotations_(from.clade_annotations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Parsimony.node_metadata)
}

void node_metadata::SharedCtor() {
}

node_metadata::~node_metadata() {
  // @@protoc_insertion_point(destructor:Parsimony.node_metadata)
  SharedDtor();
}

void node_metadata::SharedDtor() {
}

void node_metadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* node_metadata::descriptor() {
  ::protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const node_metadata& node_metadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_parsimony_2eproto::scc_info_node_metadata.base);
  return *internal_default_instance();
}


void node_metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.node_metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clade_annotations_.Clear();
  _internal_metadata_.Clear();
}

bool node_metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parsimony.node_metadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string clade_annotations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_clade_annotations()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clade_annotations(this->clade_annotations_size() - 1).data(),
            static_cast<int>(this->clade_annotations(this->clade_annotations_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parsimony.node_metadata.clade_annotations"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parsimony.node_metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parsimony.node_metadata)
  return false;
#undef DO_
}

void node_metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parsimony.node_metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string clade_annotations = 1;
  for (int i = 0, n = this->clade_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clade_annotations(i).data(), static_cast<int>(this->clade_annotations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.node_metadata.clade_annotations");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->clade_annotations(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Parsimony.node_metadata)
}

::google::protobuf::uint8* node_metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Parsimony.node_metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string clade_annotations = 1;
  for (int i = 0, n = this->clade_annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clade_annotations(i).data(), static_cast<int>(this->clade_annotations(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.node_metadata.clade_annotations");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->clade_annotations(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parsimony.node_metadata)
  return target;
}

size_t node_metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Parsimony.node_metadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string clade_annotations = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->clade_annotations_size());
  for (int i = 0, n = this->clade_annotations_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->clade_annotations(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void node_metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Parsimony.node_metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const node_metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const node_metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Parsimony.node_metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Parsimony.node_metadata)
    MergeFrom(*source);
  }
}

void node_metadata::MergeFrom(const node_metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.node_metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  clade_annotations_.MergeFrom(from.clade_annotations_);
}

void node_metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Parsimony.node_metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void node_metadata::CopyFrom(const node_metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.node_metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool node_metadata::IsInitialized() const {
  return true;
}

void node_metadata::Swap(node_metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void node_metadata::InternalSwap(node_metadata* other) {
  using std::swap;
  clade_annotations_.InternalSwap(CastToBase(&other->clade_annotations_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata node_metadata::GetMetadata() const {
  protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void data::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int data::kNewickFieldNumber;
const int data::kNodeMutationsFieldNumber;
const int data::kCondensedNodesFieldNumber;
const int data::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

data::data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_parsimony_2eproto::scc_info_data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Parsimony.data)
}
data::data(const data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      node_mutations_(from.node_mutations_),
      condensed_nodes_(from.condensed_nodes_),
      metadata_(from.metadata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  newick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newick().size() > 0) {
    newick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newick_);
  }
  // @@protoc_insertion_point(copy_constructor:Parsimony.data)
}

void data::SharedCtor() {
  newick_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

data::~data() {
  // @@protoc_insertion_point(destructor:Parsimony.data)
  SharedDtor();
}

void data::SharedDtor() {
  newick_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* data::descriptor() {
  ::protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const data& data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_parsimony_2eproto::scc_info_data.base);
  return *internal_default_instance();
}


void data::Clear() {
// @@protoc_insertion_point(message_clear_start:Parsimony.data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_mutations_.Clear();
  condensed_nodes_.Clear();
  metadata_.Clear();
  newick_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Parsimony.data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string newick = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newick()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newick().data(), static_cast<int>(this->newick().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Parsimony.data.newick"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Parsimony.mutation_list node_mutations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_node_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Parsimony.condensed_node condensed_nodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_condensed_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Parsimony.node_metadata metadata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Parsimony.data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Parsimony.data)
  return false;
#undef DO_
}

void data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Parsimony.data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string newick = 1;
  if (this->newick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newick().data(), static_cast<int>(this->newick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.data.newick");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->newick(), output);
  }

  // repeated .Parsimony.mutation_list node_mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->node_mutations(static_cast<int>(i)),
      output);
  }

  // repeated .Parsimony.condensed_node condensed_nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condensed_nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->condensed_nodes(static_cast<int>(i)),
      output);
  }

  // repeated .Parsimony.node_metadata metadata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->metadata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Parsimony.data)
}

::google::protobuf::uint8* data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Parsimony.data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string newick = 1;
  if (this->newick().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newick().data(), static_cast<int>(this->newick().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Parsimony.data.newick");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->newick(), target);
  }

  // repeated .Parsimony.mutation_list node_mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->node_mutations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Parsimony.condensed_node condensed_nodes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->condensed_nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->condensed_nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Parsimony.node_metadata metadata = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Parsimony.data)
  return target;
}

size_t data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Parsimony.data)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Parsimony.mutation_list node_mutations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->node_mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->node_mutations(static_cast<int>(i)));
    }
  }

  // repeated .Parsimony.condensed_node condensed_nodes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->condensed_nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->condensed_nodes(static_cast<int>(i)));
    }
  }

  // repeated .Parsimony.node_metadata metadata = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  // string newick = 1;
  if (this->newick().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newick());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Parsimony.data)
  GOOGLE_DCHECK_NE(&from, this);
  const data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Parsimony.data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Parsimony.data)
    MergeFrom(*source);
  }
}

void data::MergeFrom(const data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Parsimony.data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_mutations_.MergeFrom(from.node_mutations_);
  condensed_nodes_.MergeFrom(from.condensed_nodes_);
  metadata_.MergeFrom(from.metadata_);
  if (from.newick().size() > 0) {

    newick_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newick_);
  }
}

void data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Parsimony.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void data::CopyFrom(const data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Parsimony.data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool data::IsInitialized() const {
  return true;
}

void data::Swap(data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void data::InternalSwap(data* other) {
  using std::swap;
  CastToBase(&node_mutations_)->InternalSwap(CastToBase(&other->node_mutations_));
  CastToBase(&condensed_nodes_)->InternalSwap(CastToBase(&other->condensed_nodes_));
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
  newick_.Swap(&other->newick_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata data::GetMetadata() const {
  protobuf_parsimony_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_parsimony_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Parsimony
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Parsimony::mut* Arena::CreateMaybeMessage< ::Parsimony::mut >(Arena* arena) {
  return Arena::CreateInternal< ::Parsimony::mut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Parsimony::mutation_list* Arena::CreateMaybeMessage< ::Parsimony::mutation_list >(Arena* arena) {
  return Arena::CreateInternal< ::Parsimony::mutation_list >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Parsimony::condensed_node* Arena::CreateMaybeMessage< ::Parsimony::condensed_node >(Arena* arena) {
  return Arena::CreateInternal< ::Parsimony::condensed_node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Parsimony::node_metadata* Arena::CreateMaybeMessage< ::Parsimony::node_metadata >(Arena* arena) {
  return Arena::CreateInternal< ::Parsimony::node_metadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Parsimony::data* Arena::CreateMaybeMessage< ::Parsimony::data >(Arena* arena) {
  return Arena::CreateInternal< ::Parsimony::data >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
